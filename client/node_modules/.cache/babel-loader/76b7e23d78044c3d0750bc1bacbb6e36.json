{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jared\\\\Desktop\\\\Coding Bootcamp FIles\\\\The_Three_Cs\\\\the3cs\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport '../styling/App.css'; // import 'react-calendar/dist/Calendar.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  function tileContent({\n    date,\n    view\n  }) {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      // Check if a date React-Calendar wants to check is on the list of dates to add class to\n      if (datesToAddContentTo.find(dDate => isSameDay(dDate, date))) {\n        return 'My content';\n      }\n    }\n  }\n}\n\n_c = App;\n\nfunction MyApp() {\n  _s();\n\n  const [value, setValue] = useState(new Date());\n  const [textshown, settextshown] = useState(false);\n\n  function opentextbox(date) {\n    settextshown(true);\n  }\n\n  const [recipeSearch, setRecipeSearch] = useState(\"\");\n\n  const handleInputChange = event => {\n    const {\n      value\n    } = event.target;\n    setRecipeSearch(value);\n  };\n\n  const handleFormSubmit = event => {};\n\n  /*#__PURE__*/\n  _jsxDEV(Input, {\n    name: \"Enter $\",\n    value: recipeSearch,\n    onChange: handleInputChange,\n    placeholder: \"Daily income\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 1\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Welcome \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onclickday: opentextbox,\n      onChange: onChange,\n      value: date,\n      tileContent: tileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), textshown && /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MyApp, \"KvCzZK1jTREPmh57w/LqdS26Oqg=\");\n\n_c2 = MyApp;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MyApp\");","map":{"version":3,"sources":["C:/Users/Jared/Desktop/Coding Bootcamp FIles/The_Three_Cs/the3cs/src/components/App.js"],"names":["React","useState","Calendar","App","props","tileContent","date","view","datesToAddContentTo","find","dDate","isSameDay","MyApp","value","setValue","Date","textshown","settextshown","opentextbox","recipeSearch","setRecipeSearch","handleInputChange","event","target","handleFormSubmit","onChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,oBAAP,C,CAEA;;;;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,WAASC,WAAT,CAAqB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAArB,EAAqC;AACnC;AACA,QAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB;AACA,UAAIC,mBAAmB,CAACC,IAApB,CAAyBC,KAAK,IAAIC,SAAS,CAACD,KAAD,EAAQJ,IAAR,CAA3C,CAAJ,EAA+D;AAC7D,eAAO,YAAP;AACD;AACF;AACF;AACA;;KAVMH,G;;AAWP,SAASS,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAIc,IAAJ,EAAD,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;;AACA,WAASiB,WAAT,CAAqBZ,IAArB,EAA2B;AAC1BW,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;;AACD,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;;AAEF,QAAMoB,iBAAiB,GAAGC,KAAK,IAAI;AACjC,UAAM;AAAET,MAAAA;AAAF,QAAYS,KAAK,CAACC,MAAxB;AACFH,IAAAA,eAAe,CAACP,KAAD,CAAf;AACD,GAHC;;AAIF,QAAMW,gBAAgB,GAAGF,KAAK,IAAI,CACjC,CADD;;AAEA;AAAA,UAAC,KAAD;AACA,IAAA,IAAI,EAAC,SADL;AAEA,IAAA,KAAK,EAAEH,YAFP;AAGA,IAAA,QAAQ,EAAEE,iBAHV;AAIA,IAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA;;AAaI,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,QAAD;AACD,MAAA,UAAU,EAAGH,WADZ;AAEE,MAAA,QAAQ,EAAEO,QAFZ;AAGE,MAAA,KAAK,EAAEnB,IAHT;AAIE,MAAA,WAAW,EAAED;AAJf;AAAA;AAAA;AAAA;AAAA,YAFA,EASDW,SAAS,iBAAE;AAAA;AAAA;AAAA;AAAA,YATV;AAAA,kBADF;AAcD;;GAzCQJ,K;;MAAAA,K;AA2CX,eAAeT,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport '../styling/App.css';\n\n// import 'react-calendar/dist/Calendar.css';\n\n\nfunction App(props) {\n  function tileContent({ date, view }) {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      // Check if a date React-Calendar wants to check is on the list of dates to add class to\n      if (datesToAddContentTo.find(dDate => isSameDay(dDate, date))) {\n        return 'My content';\n      }\n    }\n  }\n  }\n  function MyApp() {\n    const [value, setValue] = useState(new Date());\n    const [textshown, settextshown] = useState(false);\n    function opentextbox(date) {\n     settextshown(true)\n    }\n    const [recipeSearch, setRecipeSearch] = useState(\"\");\n\n  const handleInputChange = event => {\n    const { value } = event.target;\n  setRecipeSearch(value);\n}; \nconst handleFormSubmit = event => {\n};\n<Input\nname=\"Enter $\"\nvalue={recipeSearch}\nonChange={handleInputChange}\nplaceholder=\"Daily income\"\n/>\n  \n\n\n\n\n\n\n    return (\n      <>\n      <h1> Welcome {}</h1>\n      <Calendar\n     onclickday= {opentextbox}\n        onChange={onChange}\n        value={date}\n        tileContent={tileContent}\n      \n    />\n    {textshown&&<input></input>}\n    \n    </>\n    );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}